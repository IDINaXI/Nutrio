2. ТЕХНИЧЕСКИЕ ХАРАКТЕРИСТИКИ

2.1. Постановка задачи

Web-приложение Nutrio предназначено для персонального контроля здоровья и автоматизированного формирования индивидуальных планов питания с помощью искусственного интеллекта. Приложение предоставляет пользователю следующие основные функции:

- Регистрация и авторизация: создание личного профиля с возможностью указания индивидуальных параметров (возраст, вес, рост, цели, аллергии и др.).
- Ведение дневника веса: добавление, просмотр и анализ динамики веса с помощью графиков.
- Ведение дневника объёмов тела: фиксация и отслеживание параметров (талия, грудь, бёдра, рука, нога).
- Учёт приёма лекарств: добавление напоминаний о приёме медикаментов, просмотр истории.
- Генерация отчётов: формирование PDF-отчётов с графиками для передачи врачу.
- Получение индивидуального плана питания: интегрированный ИИ-нутрициолог анализирует данные пользователя и формирует персональный план питания на неделю с учётом целей, предпочтений и ограничений.
- Просмотр истории изменений: доступ к полной истории введённых данных.
- Управление профилем: редактирование личной информации, настройка целей.
- Уведомления: получение напоминаний о приёме лекарств и необходимости внесения новых данных.

Приложение реализовано с использованием современных технологий: серверная часть на Java Spring Boot, клиентская часть на Flutter, база данных — реляционная (MySQL/PostgreSQL). Для генерации планов питания используется модуль искусственного интеллекта, интегрированный с сервером.

Нефункциональные требования:
- Безопасность: защита персональных данных пользователей.
- Удобный интерфейс: современный дизайн, адаптивная верстка для различных устройств.
- Производительность: быстрая загрузка страниц, высокая отзывчивость интерфейса.
- Кроссплатформенность: корректная работа на популярных браузерах и мобильных устройствах.

2.2. Описание организации данных

Данные приложения хранятся в реляционной базе данных, структура которой включает следующие основные таблицы:

- users — информация о пользователях
- user_allergies — аллергии пользователя
- body_measurement — записи об объёмах тела
- weight_entry — записи о весе
- meal_plans — индивидуальные планы питания
- pill_reminder — напоминания о приёме лекарств
- pill_reminder_days_of_week — дни недели для напоминаний

Ниже приведено описание структуры таблиц:

Таблица users:
| Наименование столбца | Тип данных | Описание |
|----------------------|------------|----------|
| id                   | Число      | Уникальный идентификатор пользователя |
| name                 | Текст      | Имя пользователя |
| email                | Текст      | Электронная почта |
| password_hash        | Текст      | Хэш пароля |
| age                  | Число      | Возраст пользователя |
| gender               | Текст      | Пол пользователя |
| height               | Число      | Рост (см) |
| weight               | Число      | Текущий вес (кг) |
| activity_level       | Текст      | Уровень физической активности |
| goal                 | Текст      | Цель пользователя (например, похудение) |
| created_at           | Дата/Время | Дата регистрации |

Таблица user_allergies:
| Наименование столбца | Тип данных | Описание |
|----------------------|------------|----------|
| id                   | Число      | Уникальный идентификатор |
| user_id              | Число      | Идентификатор пользователя |
| allergy              | Текст      | Название аллергии |

Таблица body_measurement:
| Наименование столбца | Тип данных | Описание |
|----------------------|------------|----------|
| id                   | Число      | Уникальный идентификатор записи |
| user_id              | Число      | Идентификатор пользователя |
| date                 | Дата       | Дата внесения записи |
| waist                | Число      | Обхват талии (см) |
| chest                | Число      | Обхват груди (см) |
| hips                 | Число      | Обхват бёдер (см) |
| arm                  | Число      | Обхват руки (см) |
| leg                  | Число      | Обхват ноги (см) |

Таблица weight_entry:
| Наименование столбца | Тип данных | Описание |
|----------------------|------------|----------|
| id                   | Число      | Уникальный идентификатор записи |
| user_id              | Число      | Идентификатор пользователя |
| date                 | Дата       | Дата внесения записи |
| weight               | Число      | Значение веса (кг) |

Таблица meal_plans:
| Наименование столбца | Тип данных | Описание |
|----------------------|------------|----------|
| id                   | Число      | Уникальный идентификатор плана |
| user_id              | Число      | Идентификатор пользователя |
| week_start           | Дата       | Дата начала недели плана |
| plan_json            | Текст      | JSON-структура с данными по дням и приёмам пищи |

Таблица pill_reminder:
| Наименование столбца | Тип данных | Описание |
|----------------------|------------|----------|
| id                   | Число      | Уникальный идентификатор напоминания |
| user_id              | Число      | Идентификатор пользователя |
| name                 | Текст      | Название лекарства |
| time                 | Время      | Время приёма |
| dosage               | Текст      | Дозировка |
| comment              | Текст      | Комментарий |

Таблица pill_reminder_days_of_week:
| Наименование столбца | Тип данных | Описание |
|----------------------|------------|----------|
| id                   | Число      | Уникальный идентификатор |
| pill_reminder_id     | Число      | Идентификатор напоминания |
| day_of_week          | Текст      | День недели (например, 'Понедельник') |

Входные данные программы:
- Логин, пароль, email пользователя
- Показатели веса и объёмов тела
- Названия и параметры лекарств
- Даты и время напоминаний
- Персональные параметры для расчёта плана питания (цели, аллергии, предпочтения)

Выходные данные программы:
- Индивидуальный план питания на неделю
- Графики и отчёты
- История изменений
- Уведомления и напоминания 

2.3. Описание программных средств

Программное средство Nutrio разработано с использованием современных технологий и инструментов, обеспечивающих кроссплатформенность, масштабируемость и удобство для пользователя.

Серверная часть реализована на платформе Java Spring Boot. Этот фреймворк обеспечивает высокую производительность, безопасность и гибкость при построении RESTful API, а также хорошо подходит для интеграции с модулями искусственного интеллекта и работы с реляционными базами данных.

Клиентская часть приложения разработана с использованием Flutter — кроссплатформенного фреймворка, позволяющего создавать современные мобильные и web-интерфейсы с единой кодовой базой. Flutter обеспечивает высокую скорость разработки, адаптивность интерфейса и отличную производительность на различных устройствах.

База данных приложения спроектирована и реализована в реляционной СУБД MySQL (или PostgreSQL). Для администрирования и визуализации структуры базы данных может использоваться web-интерфейс, такой как phpMyAdmin или аналогичные инструменты.

Краткая характеристика используемых технологий

Java Spring Boot
- Преимущества:
  1. Высокая производительность и масштабируемость.
  2. Богатый набор встроенных средств для безопасности, работы с БД, интеграции с внешними сервисами.
  3. Активное сообщество и обширная документация.
- Недостатки:
  1. Более высокий порог вхождения для начинающих разработчиков.
  2. Требует большего объёма ресурсов по сравнению с легковесными решениями.

Flutter
- Преимущества:
  1. Кроссплатформенность: единая кодовая база для Android, iOS и Web.
  2. Быстрая разработка благодаря hot reload и большому количеству готовых виджетов.
  3. Современный и гибкий UI.
- Недостатки:
  1. Большой размер итогового приложения.
  2. Некоторые ограничения по нативным возможностям на web-платформе.

MySQL/PostgreSQL
- Преимущества:
  1. Надёжность и высокая производительность.
  2. Гибкая работа с большими объёмами данных.
  3. Широкая поддержка инструментов администрирования.
- Недостатки:
  1. Требует настройки и обслуживания серверной инфраструктуры.
  2. Возможны сложности при масштабировании на очень больших нагрузках.

phpMyAdmin (или аналогичный web-интерфейс)
- Преимущества:
  1. Удобство визуального управления базой данных.
  2. Возможность быстрого просмотра, редактирования и экспорта данных.
- Недостатки:
  1. Необходимость обеспечения безопасности доступа к интерфейсу.
  2. Ограниченная функциональность по сравнению с профессиональными инструментами для работы с БД.

Особенности архитектуры

Важной особенностью приложения Nutrio является интеграция модуля искусственного интеллекта (ИИ-нутрициолога), который анализирует персональные данные пользователя и формирует индивидуальный план питания на неделю. Для этого используются современные алгоритмы обработки данных и генерации рекомендаций, что позволяет учитывать цели, предпочтения и ограничения пользователя. 